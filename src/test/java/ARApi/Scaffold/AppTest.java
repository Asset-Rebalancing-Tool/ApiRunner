/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package ARApi.Scaffold;

import ARApi.Scaffold.AssetFetchers.DbAssetFetcher;
import ARApi.Scaffold.Database.Entities.AssetPriceRecord;
import ARApi.Scaffold.Database.Entities.PublicAsset;
import ARApi.Scaffold.Endpoints.AssetApi;
import ARApi.Scaffold.Endpoints.ModelAsset;
import ARApi.Scaffold.Endpoints.SearchAssetRequest;
import ARApi.Scaffold.WebDriver.IWebDriverService;
import dev.failsafe.internal.util.Assert;
import org.hibernate.SessionFactory;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit.jupiter.SpringExtension;


import java.util.Arrays;
import java.util.List;
import java.util.Set;
import java.util.concurrent.ExecutionException;

import static org.junit.jupiter.api.Assertions.*;

@ContextConfiguration("/test.xml")
@ExtendWith(SpringExtension.class)
class AppTest {

    @Autowired
    AssetApi stockApi;

    @Autowired
    SessionFactory dbSessionProvider;

    @Autowired
    IWebDriverService webDriverService;

    @Autowired
    DbAssetFetcher assetFetcher;

    @Test void SaveAsset(){
        var session = dbSessionProvider.openSession();
        var trans = session.beginTransaction();
        var dbAsset = new PublicAsset();
        var dbAssetRecord = new AssetPriceRecord();
        dbAssetRecord.Asset = dbAsset;
        dbAsset.AssetPriceRecords = Set.of(dbAssetRecord);
        session.persist(dbAssetRecord);
        session.persist(dbAsset);
        trans.commit();
        session.close();
    }

    @Test void TestFetcher(){
        assetFetcher.GetTargetHost();
    }




}
